// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package offersrpc

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OffersClient is the client API for Offers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OffersClient interface {
}

type offersClient struct {
	cc grpc.ClientConnInterface
}

func NewOffersClient(cc grpc.ClientConnInterface) OffersClient {
	return &offersClient{cc}
}

// OffersServer is the server API for Offers service.
// All implementations must embed UnimplementedOffersServer
// for forward compatibility
type OffersServer interface {
	mustEmbedUnimplementedOffersServer()
}

// UnimplementedOffersServer must be embedded to have forward compatible implementations.
type UnimplementedOffersServer struct {
}

func (UnimplementedOffersServer) mustEmbedUnimplementedOffersServer() {}

// UnsafeOffersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OffersServer will
// result in compilation errors.
type UnsafeOffersServer interface {
	mustEmbedUnimplementedOffersServer()
}

func RegisterOffersServer(s grpc.ServiceRegistrar, srv OffersServer) {
	s.RegisterService(&Offers_ServiceDesc, srv)
}

// Offers_ServiceDesc is the grpc.ServiceDesc for Offers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Offers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "offersrpc.Offers",
	HandlerType: (*OffersServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "offersrpc.proto",
}
